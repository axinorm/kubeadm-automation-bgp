---
- name: Reset Kubernetes component
  shell: "kubeadm reset --force --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock"
  register: reset_cluster

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: |
    kubeadm init --service-cidr {{ service_cidr }} \
                 --kubernetes-version {{ kubernetes_version }} \
                 --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }} \
                 --apiserver-advertise-address {{ kubernetes_master_ip }} \
                 --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock \
                 {{ kubeadm_opts }} \
                 {{ init_opts }}
  register: init_cluster
  environment:
    no_proxy: "$no_proxy,.svc,.svc.cluster.local"

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755

- name: Copy admin.conf to Home directory
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0700
    remote_src: true
  when: init_cluster is succeeded

- name: Get kubeconfig from master
  fetch:
    src: /home/vagrant/.kube/config
    dest: kubeconfig_master
    flat: true
  when: init_cluster is succeeded